@page "/AddPerson"
@using Assignment1.Data
@using Assignment1.Models
@inject IAdultService AdultService
@inject NavigationManager NavigationManager

<AuthorizeView Policy="GuestAndMember">
    <h3>UnAuthorized Access, Please Log In to gain access to this page.</h3>
</AuthorizeView>

<AuthorizeView>
    <Authorized>
        @if (Int16.Parse(context.User.FindFirst(claim => claim.Type.Equals("Level")).Value) > 4)
        {
            <h3>
                UnAuthorized Access, Please Log In to gain access to this page.
            </h3>
        }
    </Authorized>
    <NotAuthorized>
        <h3>
            UnAuthorized Access, Please Log In to gain access to this page.
        </h3>
    </NotAuthorized>
</AuthorizeView>
<AuthorizeView Policy="SecurityLevel4">
    <ChildContent Context="form">
        <h3>AddAdult</h3>

        <EditForm Model="@newAdult" OnValidSubmit="@AddNewAdult">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                First Name:<br />
                <InputTextArea rows="1" @bind-Value="newAdult.FirstName" />
            </div>
            <div class="form-group">
                Last Name:<br />
                <InputTextArea rows="1" @bind-Value="newAdult.LastName" />
            </div>
            <div class="form-group">
                Hair Color:<br />
                <InputTextArea rows="1" @bind-Value="newAdult.HairColor" />
            </div>
            <div class="form-group">
                Eye Color:<br />
                <InputTextArea rows="1" @bind-Value="newAdult.EyeColor" />
            </div>
            <div class="form-group">
                Age:<br />
                <InputNumber rows="1" @bind-Value="newAdult.Age" />
            </div>
            <div class="form-group">
                Height:<br />
                <InputNumber rows="1" @bind-Value="newAdult.Height" />
            </div>
            <div class="form-group">
                Weight:<br />
                <InputNumber rows="1" @bind-Value="newAdult.Weight" />
            </div>
            <div class="form-group">
                Sex:<br />
                <InputTextArea rows="1" @bind-Value="newAdult.Sex" />
            </div>
            <div class="form-group">
                Job:<br />
                <InputTextArea rows="1" @bind-Value="newAdult.JobTitle" />
            </div>
            <p class="actions">
                <button class="btn btn-outline-dark" type="submit">Create</button>
            </p>
        </EditForm>
    </ChildContent>

    @code {
        private readonly Adult newAdult = new Adult();

        private void AddNewAdult()
        {
            AdultService.AddAdult(newAdult);
            NavigationManager.NavigateTo("/", true);
        }



    }
</AuthorizeView>
